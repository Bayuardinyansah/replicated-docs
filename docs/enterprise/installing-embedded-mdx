# Installing with Embedded Cluster

This topic describes how to install an application in an online environments with the Embedded Cluster installer.

## Prerequisites

* Ensure that your installation environments meets the Embedded Cluster requirements.

## Install

To install an application with Embedded Cluster:

1. At the top right of the customer page, click **Install instructions** and choose **Embedded cluster**.

     ![Customer install instructions drop down button](/images/customer-install-instructions-dropdown.png)

     [View a larger version of this image](/images/customer-install-instructions-dropdown.png)

     An **Embedded cluster installation instructions** dialog is displayed with instructions on how to download the Embedded Cluster binary and install your application.

1. (Optional) In the **Select a version** dropdown, select a version label to download the release artifacts for a specific version of your application.

     For example:

     <img alt="Embedded cluster install instruction dialog" src="/images/embedded-cluster-install-dialog.png" width="550px"/>

     [View a larger version of this image](/images/embedded-cluster-install-dialog.png)

1. SSH onto the machine where you will install.

1. Run the first two commands in the **Embedded cluster installation instructions** dialog to download the binary and license and extract them. Ensure that the Embedded Cluster binary and the license are available in the working directory.

1. Install the application:

    ```
    sudo ./APP_SLUG install --license LICENSE_FILE
    ```
    Where:
    * `APP_SLUG` is the unique slug for the application.
    * `LICENSE_FILE` is the customer's license.

1. Enter an Admin Console password when prompted.

     The Admin Console URL is printed when the installation finishes.

1. Go to the URL provided to access the Admin Console.

1. Log in with the password you created during installation.

1. 

## Install Behind a Proxy Server

The following flags can be used with the Embedded Cluster `install` command to install behind a proxy server:

<table>
  <tr>
    <th width="35%">Flag</th>
    <th width="65%">Description</th>
  </tr>
  <tr>
     <td>`--http-proxy`</td>
     <td>Proxy server to use for HTTP</td>
  </tr>
  <tr>
     <td>`--https-proxy`</td>
     <td>Proxy server to use for HTTPS</td>
  </tr>
  <tr>
     <td>`--no-proxy`</td>
     <td>Comma-separated list of hosts for which not to use a proxy</td>
  </tr>
</table>

**Example:**

```bash
sudo ./APP_SLUG install --license LICENSE_FILE \
  --http-proxy=HOST:PORT \
  --https-proxy=HOST:PORT \
  --no-proxy=LIST_OF_HOSTS
```

Where:

* `LICENSE_FILE` is the customer's license
* `HOST:PORT` is the host and port of the proxy server
* `LIST_OF_HOSTS` is the list of hosts to not proxy

For multi-node clusters, the proxy settings are automatically configured when joining additional nodes. When deploying the first node of a multi-node cluster, you should pass the node IP addresses (typically in CIDR notation) to `--no-proxy`.

The following are never proxied:
* Internal cluster communication (`localhost`, `127.0.0.1`, `.default`, `.local`, `.svc`, `kubernetes`)
* Communiation to the KOTS database (`kotsadm-rqlite`)
* The CIDR used for assigning IPs to Kubernetes Pods and Services (`10.0.0.0/8`)

**Requirement:**

Proxy installations require Embedded Cluster 1.5.1 or later with Kubernetes 1.29 or later. For example, Embedded Cluster 1.6.0+k8s-1.29 supports installing behind a proxy, and 1.6.0+k8s-1.28 does not. For the latest version information, see the [embedded-cluster](https://github.com/replicatedhq/embedded-cluster/releases) repository in GitHub.

**Limitations:**
* Proxy settings are not automatically propagated to your [Helm extensions](/reference/embedded-config#helm-extensions) and must be manually configured.
* Proxy settings cannot be changed after installation or during upgrade.

### Set IP Address Ranges for Pods and Services

The following flags can be used with the Embedded Cluster `install` command to allocate IP address ranges for Pods and Services:

<table>
  <tr>
    <th width="35%">Flag</th>
    <th width="65%">Description</th>
  </tr>
  <tr>
     <td>`--pod-cidr`</td>
     <td>The range of IP addresses that can be assigned to Pods, in CIDR notation. By default, the Pod CIDR is 10.96.0.0/12.</td>
  </tr>
  <tr>
     <td>`--service-cidr`</td>
     <td>The range of IP addresses that can be assigned to Services, in CIDR notation. By default, the Service CIDR is 10.244.0.0/16.</td>
  </tr>
</table>


**Example:**

```bash
sudo ./my-app install --license license.yaml --pod-cidr 172.16.136.0/16
```

**Limitation:**

The `--pod-cidr` and `--service-cidr` flags are not supported on Red Hat Enterprise Linux (RHEL) 9 operating systems.